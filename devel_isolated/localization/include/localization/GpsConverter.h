// Generated by gencpp from file localization/GpsConverter.msg
// DO NOT EDIT!


#ifndef LOCALIZATION_MESSAGE_GPSCONVERTER_H
#define LOCALIZATION_MESSAGE_GPSCONVERTER_H

#include <ros/service_traits.h>


#include <localization/GpsConverterRequest.h>
#include <localization/GpsConverterResponse.h>


namespace localization
{

struct GpsConverter
{

typedef GpsConverterRequest Request;
typedef GpsConverterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GpsConverter
} // namespace localization


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::localization::GpsConverter > {
  static const char* value()
  {
    return "bdcf5f27c24de937f7f2bbe531c1e1f0";
  }

  static const char* value(const ::localization::GpsConverter&) { return value(); }
};

template<>
struct DataType< ::localization::GpsConverter > {
  static const char* value()
  {
    return "localization/GpsConverter";
  }

  static const char* value(const ::localization::GpsConverter&) { return value(); }
};


// service_traits::MD5Sum< ::localization::GpsConverterRequest> should match
// service_traits::MD5Sum< ::localization::GpsConverter >
template<>
struct MD5Sum< ::localization::GpsConverterRequest>
{
  static const char* value()
  {
    return MD5Sum< ::localization::GpsConverter >::value();
  }
  static const char* value(const ::localization::GpsConverterRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::localization::GpsConverterRequest> should match
// service_traits::DataType< ::localization::GpsConverter >
template<>
struct DataType< ::localization::GpsConverterRequest>
{
  static const char* value()
  {
    return DataType< ::localization::GpsConverter >::value();
  }
  static const char* value(const ::localization::GpsConverterRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::localization::GpsConverterResponse> should match
// service_traits::MD5Sum< ::localization::GpsConverter >
template<>
struct MD5Sum< ::localization::GpsConverterResponse>
{
  static const char* value()
  {
    return MD5Sum< ::localization::GpsConverter >::value();
  }
  static const char* value(const ::localization::GpsConverterResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::localization::GpsConverterResponse> should match
// service_traits::DataType< ::localization::GpsConverter >
template<>
struct DataType< ::localization::GpsConverterResponse>
{
  static const char* value()
  {
    return DataType< ::localization::GpsConverter >::value();
  }
  static const char* value(const ::localization::GpsConverterResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LOCALIZATION_MESSAGE_GPSCONVERTER_H
